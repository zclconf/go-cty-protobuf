// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: testproto.proto

// This is here only to give us some convenient-to-access message types
// for use in this module's unit tests.
//
// To regenerate the .pb.go file:
// protoc --go_out=. --go_opt=paths=source_relative testproto.proto --experimental_allow_proto3_optional
//
// With that said, we only use the generated Go package as a convenient way
// to access the underlying descriptors using protoreflect, so we largely
// ignore most of what protoc generates.

package testproto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WithEnum_Things int32

const (
	WithEnum_A WithEnum_Things = 0
	WithEnum_b WithEnum_Things = 1
	WithEnum_C WithEnum_Things = 2
	WithEnum_d WithEnum_Things = 3
)

// Enum value maps for WithEnum_Things.
var (
	WithEnum_Things_name = map[int32]string{
		0: "A",
		1: "b",
		2: "C",
		3: "d",
	}
	WithEnum_Things_value = map[string]int32{
		"A": 0,
		"b": 1,
		"C": 2,
		"d": 3,
	}
)

func (x WithEnum_Things) Enum() *WithEnum_Things {
	p := new(WithEnum_Things)
	*p = x
	return p
}

func (x WithEnum_Things) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithEnum_Things) Descriptor() protoreflect.EnumDescriptor {
	return file_testproto_proto_enumTypes[0].Descriptor()
}

func (WithEnum_Things) Type() protoreflect.EnumType {
	return &file_testproto_proto_enumTypes[0]
}

func (x WithEnum_Things) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithEnum_Things.Descriptor instead.
func (WithEnum_Things) EnumDescriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{5, 0}
}

type Assorted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TDouble   float64          `protobuf:"fixed64,1,opt,name=t_double,json=tDouble,proto3" json:"t_double,omitempty"`
	TFloat    float32          `protobuf:"fixed32,2,opt,name=t_float,json=tFloat,proto3" json:"t_float,omitempty"`
	TInt32    int32            `protobuf:"varint,3,opt,name=t_int32,json=tInt32,proto3" json:"t_int32,omitempty"`
	TInt64    int64            `protobuf:"varint,4,opt,name=t_int64,json=tInt64,proto3" json:"t_int64,omitempty"`
	TUint32   uint32           `protobuf:"varint,5,opt,name=t_uint32,json=tUint32,proto3" json:"t_uint32,omitempty"`
	TUint64   uint64           `protobuf:"varint,6,opt,name=t_uint64,json=tUint64,proto3" json:"t_uint64,omitempty"`
	TSint32   int32            `protobuf:"zigzag32,7,opt,name=t_sint32,json=tSint32,proto3" json:"t_sint32,omitempty"`
	TSint64   int64            `protobuf:"zigzag64,8,opt,name=t_sint64,json=tSint64,proto3" json:"t_sint64,omitempty"`
	TFixed32  uint32           `protobuf:"fixed32,9,opt,name=t_fixed32,json=tFixed32,proto3" json:"t_fixed32,omitempty"`
	TFixed64  uint64           `protobuf:"fixed64,10,opt,name=t_fixed64,json=tFixed64,proto3" json:"t_fixed64,omitempty"`
	TSfixed32 int32            `protobuf:"fixed32,11,opt,name=t_sfixed32,json=tSfixed32,proto3" json:"t_sfixed32,omitempty"`
	TSfixed64 int64            `protobuf:"fixed64,12,opt,name=t_sfixed64,json=tSfixed64,proto3" json:"t_sfixed64,omitempty"`
	TBool     bool             `protobuf:"varint,13,opt,name=t_bool,json=tBool,proto3" json:"t_bool,omitempty"`
	TString   string           `protobuf:"bytes,14,opt,name=t_string,json=tString,proto3" json:"t_string,omitempty"`
	TBytes    []byte           `protobuf:"bytes,15,opt,name=t_bytes,json=tBytes,proto3" json:"t_bytes,omitempty"`
	TMessage  *Assorted_Nested `protobuf:"bytes,16,opt,name=t_message,json=tMessage,proto3" json:"t_message,omitempty"`
}

func (x *Assorted) Reset() {
	*x = Assorted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assorted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assorted) ProtoMessage() {}

func (x *Assorted) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assorted.ProtoReflect.Descriptor instead.
func (*Assorted) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{0}
}

func (x *Assorted) GetTDouble() float64 {
	if x != nil {
		return x.TDouble
	}
	return 0
}

func (x *Assorted) GetTFloat() float32 {
	if x != nil {
		return x.TFloat
	}
	return 0
}

func (x *Assorted) GetTInt32() int32 {
	if x != nil {
		return x.TInt32
	}
	return 0
}

func (x *Assorted) GetTInt64() int64 {
	if x != nil {
		return x.TInt64
	}
	return 0
}

func (x *Assorted) GetTUint32() uint32 {
	if x != nil {
		return x.TUint32
	}
	return 0
}

func (x *Assorted) GetTUint64() uint64 {
	if x != nil {
		return x.TUint64
	}
	return 0
}

func (x *Assorted) GetTSint32() int32 {
	if x != nil {
		return x.TSint32
	}
	return 0
}

func (x *Assorted) GetTSint64() int64 {
	if x != nil {
		return x.TSint64
	}
	return 0
}

func (x *Assorted) GetTFixed32() uint32 {
	if x != nil {
		return x.TFixed32
	}
	return 0
}

func (x *Assorted) GetTFixed64() uint64 {
	if x != nil {
		return x.TFixed64
	}
	return 0
}

func (x *Assorted) GetTSfixed32() int32 {
	if x != nil {
		return x.TSfixed32
	}
	return 0
}

func (x *Assorted) GetTSfixed64() int64 {
	if x != nil {
		return x.TSfixed64
	}
	return 0
}

func (x *Assorted) GetTBool() bool {
	if x != nil {
		return x.TBool
	}
	return false
}

func (x *Assorted) GetTString() string {
	if x != nil {
		return x.TString
	}
	return ""
}

func (x *Assorted) GetTBytes() []byte {
	if x != nil {
		return x.TBytes
	}
	return nil
}

func (x *Assorted) GetTMessage() *Assorted_Nested {
	if x != nil {
		return x.TMessage
	}
	return nil
}

type WithOptional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StringReq  string               `protobuf:"bytes,1,opt,name=string_req,json=stringReq,proto3" json:"string_req,omitempty"`
	StringOpt  *string              `protobuf:"bytes,2,opt,name=string_opt,json=stringOpt,proto3,oneof" json:"string_opt,omitempty"`
	Int32Req   int32                `protobuf:"varint,3,opt,name=int32_req,json=int32Req,proto3" json:"int32_req,omitempty"`
	Int32Opt   *int32               `protobuf:"varint,4,opt,name=int32_opt,json=int32Opt,proto3,oneof" json:"int32_opt,omitempty"`
	MessageReq *WithOptional_Nested `protobuf:"bytes,5,opt,name=message_req,json=messageReq,proto3" json:"message_req,omitempty"` // not actually required; messages are always optional
	MessageOpt *WithOptional_Nested `protobuf:"bytes,6,opt,name=message_opt,json=messageOpt,proto3,oneof" json:"message_opt,omitempty"`
}

func (x *WithOptional) Reset() {
	*x = WithOptional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithOptional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithOptional) ProtoMessage() {}

func (x *WithOptional) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithOptional.ProtoReflect.Descriptor instead.
func (*WithOptional) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{1}
}

func (x *WithOptional) GetStringReq() string {
	if x != nil {
		return x.StringReq
	}
	return ""
}

func (x *WithOptional) GetStringOpt() string {
	if x != nil && x.StringOpt != nil {
		return *x.StringOpt
	}
	return ""
}

func (x *WithOptional) GetInt32Req() int32 {
	if x != nil {
		return x.Int32Req
	}
	return 0
}

func (x *WithOptional) GetInt32Opt() int32 {
	if x != nil && x.Int32Opt != nil {
		return *x.Int32Opt
	}
	return 0
}

func (x *WithOptional) GetMessageReq() *WithOptional_Nested {
	if x != nil {
		return x.MessageReq
	}
	return nil
}

func (x *WithOptional) GetMessageOpt() *WithOptional_Nested {
	if x != nil {
		return x.MessageOpt
	}
	return nil
}

type WithOneOf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outside string `protobuf:"bytes,1,opt,name=outside,proto3" json:"outside,omitempty"`
	// Types that are assignable to TOneof:
	//	*WithOneOf_A
	//	*WithOneOf_B
	TOneof isWithOneOf_TOneof `protobuf_oneof:"t_oneof"`
}

func (x *WithOneOf) Reset() {
	*x = WithOneOf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithOneOf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithOneOf) ProtoMessage() {}

func (x *WithOneOf) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithOneOf.ProtoReflect.Descriptor instead.
func (*WithOneOf) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{2}
}

func (x *WithOneOf) GetOutside() string {
	if x != nil {
		return x.Outside
	}
	return ""
}

func (m *WithOneOf) GetTOneof() isWithOneOf_TOneof {
	if m != nil {
		return m.TOneof
	}
	return nil
}

func (x *WithOneOf) GetA() string {
	if x, ok := x.GetTOneof().(*WithOneOf_A); ok {
		return x.A
	}
	return ""
}

func (x *WithOneOf) GetB() string {
	if x, ok := x.GetTOneof().(*WithOneOf_B); ok {
		return x.B
	}
	return ""
}

type isWithOneOf_TOneof interface {
	isWithOneOf_TOneof()
}

type WithOneOf_A struct {
	A string `protobuf:"bytes,2,opt,name=a,proto3,oneof"`
}

type WithOneOf_B struct {
	B string `protobuf:"bytes,3,opt,name=b,proto3,oneof"`
}

func (*WithOneOf_A) isWithOneOf_TOneof() {}

func (*WithOneOf_B) isWithOneOf_TOneof() {}

type WithRepeated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TStrings          []string                        `protobuf:"bytes,1,rep,name=t_strings,json=tStrings,proto3" json:"t_strings,omitempty"`
	TMessage          []*WithRepeated_Nested          `protobuf:"bytes,2,rep,name=t_message,json=tMessage,proto3" json:"t_message,omitempty"`
	TMapStringBool    map[string]bool                 `protobuf:"bytes,3,rep,name=t_map_string_bool,json=tMapStringBool,proto3" json:"t_map_string_bool,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TMapNumberBool    map[int64]bool                  `protobuf:"bytes,4,rep,name=t_map_number_bool,json=tMapNumberBool,proto3" json:"t_map_number_bool,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	TMapStringMessage map[string]*WithRepeated_Nested `protobuf:"bytes,5,rep,name=t_map_string_message,json=tMapStringMessage,proto3" json:"t_map_string_message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TMapNumberMessage map[int64]*WithRepeated_Nested  `protobuf:"bytes,6,rep,name=t_map_number_message,json=tMapNumberMessage,proto3" json:"t_map_number_message,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WithRepeated) Reset() {
	*x = WithRepeated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithRepeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithRepeated) ProtoMessage() {}

func (x *WithRepeated) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithRepeated.ProtoReflect.Descriptor instead.
func (*WithRepeated) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{3}
}

func (x *WithRepeated) GetTStrings() []string {
	if x != nil {
		return x.TStrings
	}
	return nil
}

func (x *WithRepeated) GetTMessage() []*WithRepeated_Nested {
	if x != nil {
		return x.TMessage
	}
	return nil
}

func (x *WithRepeated) GetTMapStringBool() map[string]bool {
	if x != nil {
		return x.TMapStringBool
	}
	return nil
}

func (x *WithRepeated) GetTMapNumberBool() map[int64]bool {
	if x != nil {
		return x.TMapNumberBool
	}
	return nil
}

func (x *WithRepeated) GetTMapStringMessage() map[string]*WithRepeated_Nested {
	if x != nil {
		return x.TMapStringMessage
	}
	return nil
}

func (x *WithRepeated) GetTMapNumberMessage() map[int64]*WithRepeated_Nested {
	if x != nil {
		return x.TMapNumberMessage
	}
	return nil
}

type WithAny struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TString       string                `protobuf:"bytes,1,opt,name=t_string,json=tString,proto3" json:"t_string,omitempty"`
	TAny          *anypb.Any            `protobuf:"bytes,2,opt,name=t_any,json=tAny,proto3" json:"t_any,omitempty"`
	TAnyList      []*anypb.Any          `protobuf:"bytes,3,rep,name=t_any_list,json=tAnyList,proto3" json:"t_any_list,omitempty"`
	TAnyMapString map[string]*anypb.Any `protobuf:"bytes,4,rep,name=t_any_map_string,json=tAnyMapString,proto3" json:"t_any_map_string,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TAnyMapNumber map[int64]*anypb.Any  `protobuf:"bytes,5,rep,name=t_any_map_number,json=tAnyMapNumber,proto3" json:"t_any_map_number,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WithAny) Reset() {
	*x = WithAny{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithAny) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithAny) ProtoMessage() {}

func (x *WithAny) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithAny.ProtoReflect.Descriptor instead.
func (*WithAny) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{4}
}

func (x *WithAny) GetTString() string {
	if x != nil {
		return x.TString
	}
	return ""
}

func (x *WithAny) GetTAny() *anypb.Any {
	if x != nil {
		return x.TAny
	}
	return nil
}

func (x *WithAny) GetTAnyList() []*anypb.Any {
	if x != nil {
		return x.TAnyList
	}
	return nil
}

func (x *WithAny) GetTAnyMapString() map[string]*anypb.Any {
	if x != nil {
		return x.TAnyMapString
	}
	return nil
}

func (x *WithAny) GetTAnyMapNumber() map[int64]*anypb.Any {
	if x != nil {
		return x.TAnyMapNumber
	}
	return nil
}

type WithEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TString string          `protobuf:"bytes,1,opt,name=t_string,json=tString,proto3" json:"t_string,omitempty"`
	TEnum   WithEnum_Things `protobuf:"varint,2,opt,name=t_enum,json=tEnum,proto3,enum=testproto.WithEnum_Things" json:"t_enum,omitempty"`
}

func (x *WithEnum) Reset() {
	*x = WithEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithEnum) ProtoMessage() {}

func (x *WithEnum) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithEnum.ProtoReflect.Descriptor instead.
func (*WithEnum) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{5}
}

func (x *WithEnum) GetTString() string {
	if x != nil {
		return x.TString
	}
	return ""
}

func (x *WithEnum) GetTEnum() WithEnum_Things {
	if x != nil {
		return x.TEnum
	}
	return WithEnum_A
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{6}
}

type Simple struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo *Empty `protobuf:"bytes,1,opt,name=foo,proto3" json:"foo,omitempty"`
}

func (x *Simple) Reset() {
	*x = Simple{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Simple) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Simple) ProtoMessage() {}

func (x *Simple) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Simple.ProtoReflect.Descriptor instead.
func (*Simple) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{7}
}

func (x *Simple) GetFoo() *Empty {
	if x != nil {
		return x.Foo
	}
	return nil
}

type Assorted_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TNestedField string `protobuf:"bytes,1,opt,name=t_nested_field,json=tNestedField,proto3" json:"t_nested_field,omitempty"`
}

func (x *Assorted_Nested) Reset() {
	*x = Assorted_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Assorted_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Assorted_Nested) ProtoMessage() {}

func (x *Assorted_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Assorted_Nested.ProtoReflect.Descriptor instead.
func (*Assorted_Nested) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Assorted_Nested) GetTNestedField() string {
	if x != nil {
		return x.TNestedField
	}
	return ""
}

type WithOptional_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WithOptional_Nested) Reset() {
	*x = WithOptional_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithOptional_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithOptional_Nested) ProtoMessage() {}

func (x *WithOptional_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithOptional_Nested.ProtoReflect.Descriptor instead.
func (*WithOptional_Nested) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{1, 0}
}

type WithRepeated_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TNestedField string `protobuf:"bytes,1,opt,name=t_nested_field,json=tNestedField,proto3" json:"t_nested_field,omitempty"`
}

func (x *WithRepeated_Nested) Reset() {
	*x = WithRepeated_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_testproto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithRepeated_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithRepeated_Nested) ProtoMessage() {}

func (x *WithRepeated_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_testproto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithRepeated_Nested.ProtoReflect.Descriptor instead.
func (*WithRepeated_Nested) Descriptor() ([]byte, []int) {
	return file_testproto_proto_rawDescGZIP(), []int{3, 0}
}

func (x *WithRepeated_Nested) GetTNestedField() string {
	if x != nil {
		return x.TNestedField
	}
	return ""
}

var File_testproto_proto protoreflect.FileDescriptor

var file_testproto_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x88, 0x04, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x5f, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x74, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f,
	0x75, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x74, 0x55,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x07, 0x74, 0x53, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x5f, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x52, 0x07, 0x74,
	0x53, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x5f, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x74, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x33, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x74, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0f, 0x52, 0x09, 0x74, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x09, 0x74, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x74, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x08, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x2e, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x74, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x22, 0xce, 0x02, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x4f, 0x70, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f,
	0x72, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f, 0x6f, 0x70, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4f,
	0x70, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x44, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x6f, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x02, 0x52, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x08, 0x0a, 0x06,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x6f, 0x70, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x5f,
	0x6f, 0x70, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x6f, 0x70, 0x74, 0x22, 0x50, 0x0a, 0x09, 0x57, 0x69, 0x74, 0x68, 0x4f, 0x6e, 0x65, 0x4f, 0x66,
	0x12, 0x18, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x01, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x61, 0x12, 0x0e, 0x0a, 0x01, 0x62, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x01, 0x62, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x5f,
	0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0xdc, 0x06, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x08, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x56, 0x0a, 0x11, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65,
	0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42,
	0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x74, 0x4d, 0x61, 0x70, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x56, 0x0a, 0x11, 0x74, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x4d, 0x61,
	0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0e, 0x74, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c,
	0x12, 0x5f, 0x0a, 0x14, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11,
	0x74, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x5f, 0x0a, 0x14, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x54, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x11, 0x74, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x2e, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x74, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x54, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64, 0x0a, 0x16, 0x54, 0x4d, 0x61, 0x70,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x64,
	0x0a, 0x16, 0x54, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x73, 0x74,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xd3, 0x03, 0x0a, 0x07, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x05, 0x74,
	0x5f, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x04, 0x74, 0x41, 0x6e, 0x79, 0x12, 0x32, 0x0a, 0x0a, 0x74, 0x5f, 0x61, 0x6e, 0x79, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79,
	0x52, 0x08, 0x74, 0x41, 0x6e, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x10, 0x74, 0x5f,
	0x61, 0x6e, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x79, 0x2e, 0x54, 0x41, 0x6e, 0x79, 0x4d, 0x61, 0x70,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x74, 0x41, 0x6e,
	0x79, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x4e, 0x0a, 0x10, 0x74, 0x5f,
	0x61, 0x6e, 0x79, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x69, 0x74, 0x68, 0x41, 0x6e, 0x79, 0x2e, 0x54, 0x41, 0x6e, 0x79, 0x4d, 0x61, 0x70,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x74, 0x41, 0x6e,
	0x79, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x56, 0x0a, 0x12, 0x54, 0x41,
	0x6e, 0x79, 0x4d, 0x61, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x56, 0x0a, 0x12, 0x54, 0x41, 0x6e, 0x79, 0x4d, 0x61, 0x70, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7e, 0x0a, 0x08, 0x57, 0x69,
	0x74, 0x68, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x31, 0x0a, 0x06, 0x74, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69,
	0x74, 0x68, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x05, 0x74,
	0x45, 0x6e, 0x75, 0x6d, 0x22, 0x24, 0x0a, 0x06, 0x54, 0x68, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x05,
	0x0a, 0x01, 0x41, 0x10, 0x00, 0x12, 0x05, 0x0a, 0x01, 0x62, 0x10, 0x01, 0x12, 0x05, 0x0a, 0x01,
	0x43, 0x10, 0x02, 0x12, 0x05, 0x0a, 0x01, 0x64, 0x10, 0x03, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x2c, 0x0a, 0x06, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x03, 0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x03, 0x66, 0x6f,
	0x6f, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x7a, 0x63, 0x6c, 0x63, 0x6f, 0x6e, 0x66, 0x2f, 0x67, 0x6f, 0x2d, 0x63, 0x74, 0x79, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x74, 0x65, 0x73, 0x74, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_testproto_proto_rawDescOnce sync.Once
	file_testproto_proto_rawDescData = file_testproto_proto_rawDesc
)

func file_testproto_proto_rawDescGZIP() []byte {
	file_testproto_proto_rawDescOnce.Do(func() {
		file_testproto_proto_rawDescData = protoimpl.X.CompressGZIP(file_testproto_proto_rawDescData)
	})
	return file_testproto_proto_rawDescData
}

var file_testproto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_testproto_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_testproto_proto_goTypes = []interface{}{
	(WithEnum_Things)(0),        // 0: testproto.WithEnum.Things
	(*Assorted)(nil),            // 1: testproto.Assorted
	(*WithOptional)(nil),        // 2: testproto.WithOptional
	(*WithOneOf)(nil),           // 3: testproto.WithOneOf
	(*WithRepeated)(nil),        // 4: testproto.WithRepeated
	(*WithAny)(nil),             // 5: testproto.WithAny
	(*WithEnum)(nil),            // 6: testproto.WithEnum
	(*Empty)(nil),               // 7: testproto.Empty
	(*Simple)(nil),              // 8: testproto.Simple
	(*Assorted_Nested)(nil),     // 9: testproto.Assorted.Nested
	(*WithOptional_Nested)(nil), // 10: testproto.WithOptional.Nested
	(*WithRepeated_Nested)(nil), // 11: testproto.WithRepeated.Nested
	nil,                         // 12: testproto.WithRepeated.TMapStringBoolEntry
	nil,                         // 13: testproto.WithRepeated.TMapNumberBoolEntry
	nil,                         // 14: testproto.WithRepeated.TMapStringMessageEntry
	nil,                         // 15: testproto.WithRepeated.TMapNumberMessageEntry
	nil,                         // 16: testproto.WithAny.TAnyMapStringEntry
	nil,                         // 17: testproto.WithAny.TAnyMapNumberEntry
	(*anypb.Any)(nil),           // 18: google.protobuf.Any
}
var file_testproto_proto_depIdxs = []int32{
	9,  // 0: testproto.Assorted.t_message:type_name -> testproto.Assorted.Nested
	10, // 1: testproto.WithOptional.message_req:type_name -> testproto.WithOptional.Nested
	10, // 2: testproto.WithOptional.message_opt:type_name -> testproto.WithOptional.Nested
	11, // 3: testproto.WithRepeated.t_message:type_name -> testproto.WithRepeated.Nested
	12, // 4: testproto.WithRepeated.t_map_string_bool:type_name -> testproto.WithRepeated.TMapStringBoolEntry
	13, // 5: testproto.WithRepeated.t_map_number_bool:type_name -> testproto.WithRepeated.TMapNumberBoolEntry
	14, // 6: testproto.WithRepeated.t_map_string_message:type_name -> testproto.WithRepeated.TMapStringMessageEntry
	15, // 7: testproto.WithRepeated.t_map_number_message:type_name -> testproto.WithRepeated.TMapNumberMessageEntry
	18, // 8: testproto.WithAny.t_any:type_name -> google.protobuf.Any
	18, // 9: testproto.WithAny.t_any_list:type_name -> google.protobuf.Any
	16, // 10: testproto.WithAny.t_any_map_string:type_name -> testproto.WithAny.TAnyMapStringEntry
	17, // 11: testproto.WithAny.t_any_map_number:type_name -> testproto.WithAny.TAnyMapNumberEntry
	0,  // 12: testproto.WithEnum.t_enum:type_name -> testproto.WithEnum.Things
	7,  // 13: testproto.Simple.foo:type_name -> testproto.Empty
	11, // 14: testproto.WithRepeated.TMapStringMessageEntry.value:type_name -> testproto.WithRepeated.Nested
	11, // 15: testproto.WithRepeated.TMapNumberMessageEntry.value:type_name -> testproto.WithRepeated.Nested
	18, // 16: testproto.WithAny.TAnyMapStringEntry.value:type_name -> google.protobuf.Any
	18, // 17: testproto.WithAny.TAnyMapNumberEntry.value:type_name -> google.protobuf.Any
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_testproto_proto_init() }
func file_testproto_proto_init() {
	if File_testproto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_testproto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assorted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithOptional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithOneOf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithRepeated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithAny); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Simple); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Assorted_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithOptional_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_testproto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithRepeated_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_testproto_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_testproto_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*WithOneOf_A)(nil),
		(*WithOneOf_B)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_testproto_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_testproto_proto_goTypes,
		DependencyIndexes: file_testproto_proto_depIdxs,
		EnumInfos:         file_testproto_proto_enumTypes,
		MessageInfos:      file_testproto_proto_msgTypes,
	}.Build()
	File_testproto_proto = out.File
	file_testproto_proto_rawDesc = nil
	file_testproto_proto_goTypes = nil
	file_testproto_proto_depIdxs = nil
}
